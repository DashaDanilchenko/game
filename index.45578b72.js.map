{"mappings":"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","sources":["src/index.js","node_modules/confetti-js/dist/index.es.js"],"sourcesContent":["import ConfettiGenerator from \"confetti-js\"\r\n\r\nconst confettiSettings = { target: 'my-canvas' };\r\nconst confetti = new ConfettiGenerator(confettiSettings);\r\nconst confettiId = document.querySelector('#my-canvas')\r\n\r\nconst gameIcon = document.querySelectorAll('.player-container .fa-solid')\r\nconst computerIcon = document.querySelectorAll('.player-computer .fa-solid')\r\n\r\nconst rockComputer = document.querySelector('#rockComp')\r\nconst paperComputer = document.querySelector('#paperComp')\r\nconst scissorsComputer = document.querySelector('#scissorsComp')\r\nconst lizardComputer = document.querySelector('#lizardComp')\r\nconst spockComputer = document.querySelector('#spockComp')\r\n\r\nconst markGamer = document.querySelector('#mark-gamer')\r\nconst markComputer = document.querySelector('#mark-computer')\r\n\r\nlet computerChoice\r\nconst resultText = document.querySelector('.result-text')\r\n\r\nfunction activeIcon(arrIcon, choiceIcon) {\r\n    arrIcon.forEach(icon => icon.classList.remove('blue'))\r\n    choiceIcon.classList.add('blue')\r\n}\r\n\r\nfunction countingPoints(mark) {\r\n    let value = Number(mark.innerHTML)\r\n    value++\r\n    mark.innerHTML = value\r\n}\r\n\r\nfunction caseGame(choice) {\r\n    switch (choice) {\r\n        case 1:\r\n             activeIcon(computerIcon, rockComputer)\r\n            choice = 'rock'; break\r\n        case 2:\r\n            activeIcon(computerIcon, paperComputer)\r\n            choice = 'paper'; break \r\n        case 3:\r\n            activeIcon(computerIcon, scissorsComputer)\r\n            choice = 'scissors'; break\r\n        case 4:\r\n            activeIcon(computerIcon, lizardComputer)\r\n            choice = 'lizard'; break \r\n        case 5:\r\n            activeIcon(computerIcon, spockComputer)\r\n            choice = 'spock'; break\r\n    }\r\n    computerChoice = choice\r\n}\r\n\r\nfunction randomChoice() {\r\n   let randomNum = Math.ceil(Math.random()*5)\r\n   caseGame(randomNum)\r\n}\r\n\r\nfunction youDraw() {\r\n    resultText.innerHTML = 'Draw!'\r\n    confettiId.classList.add('none')\r\n}\r\n\r\nfunction youWon() {\r\n    resultText.innerHTML = 'Won!'\r\n    countingPoints(markGamer)\r\n    confetti.render()\r\n    confettiId.classList.remove('none')\r\n}\r\n\r\nfunction youLoss() {\r\n    resultText.innerHTML = 'Loss!'\r\n    countingPoints(markComputer)\r\n    confettiId.classList.add('none')\r\n}\r\n\r\nfunction determineWinner(gamer, computer) {\r\n    console.log(gamer, computer)\r\n    gamer ===  'rock' && computer === ('scissors' || 'lizard')  ||\r\n    gamer === 'paper' && computer === ('rock' || 'spock') ||\r\n    gamer === 'scissors' && computer === ('paper' || 'lizard') ||\r\n    gamer === 'lizard' && computer === ('spock' || 'paper') ||\r\n    gamer === 'spock' && computer === ('scissors' || 'rock')? youWon(): youLoss()\r\n}\r\n\r\nfunction comparison(myChoice) {\r\n    if (myChoice !== computerChoice) {\r\n        determineWinner(myChoice, computerChoice)\r\n    }if (myChoice === computerChoice){\r\n        youDraw() \r\n    }\r\n}\r\n\r\nfunction choice() {\r\n    activeIcon(gameIcon, this)\r\n    randomChoice()\r\n    comparison(this.id)\r\n}\r\n\r\nconst rock = document.querySelector('#rock')\r\nrock.addEventListener('click', choice)\r\nconst paper = document.querySelector('#paper')\r\npaper.addEventListener('click', choice)\r\nconst scissors = document.querySelector('#scissors')\r\nscissors.addEventListener('click', choice)\r\nconst lizard = document.querySelector('#lizard')\r\nlizard.addEventListener('click', choice)\r\nconst spock = document.querySelector('#spock')\r\nspock.addEventListener('click', choice)\r\n\r\nconst contentLoaded = document.querySelector('.fa-rotate')\r\ncontentLoaded.addEventListener('click', ()=> document.location.reload())","function ConfettiGenerator(params) {\n  //////////////\n  // Defaults\n  var appstate = {\n    target: 'confetti-holder', // Id of the canvas\n    max: 80, // Max itens to render\n    size: 1, // prop size\n    animate: true, // Should animate?\n    respawn: true, // Should confettis be respawned when getting out of screen?\n    props: ['circle', 'square', 'triangle', 'line'], // Types of confetti\n    colors: [[165,104,246],[230,61,135],[0,199,228],[253,214,126]], // Colors to render confetti\n    clock: 25, // Speed of confetti fall\n    interval: null, // Draw interval holder\n    rotate: false, // Whenever to rotate a prop\n    start_from_edge: false, // Should confettis spawn at the top/bottom of the screen?\n    width: window.innerWidth, // canvas width (as int, in px)\n    height: window.innerHeight // canvas height (as int, in px)\n  };\n\n  //////////////\n  // Setting parameters if received\n  if(params) {\n    if(params.target)\n      appstate.target = params.target;\n    if(params.max)\n      appstate.max = params.max;\n    if(params.size)\n      appstate.size = params.size;\n    if(params.animate !== undefined && params.animate !== null)\n      appstate.animate = params.animate;\n    if(params.respawn !== undefined && params.respawn !== null)\n      appstate.respawn = params.respawn;\n    if(params.props)\n      appstate.props = params.props;\n    if(params.colors)\n      appstate.colors = params.colors;\n    if(params.clock)\n      appstate.clock = params.clock;\n    if(params.start_from_edge !== undefined && params.start_from_edge !== null)\n      appstate.start_from_edge = params.start_from_edge;\n    if(params.width)\n      appstate.width = params.width;\n    if(params.height)\n      appstate.height = params.height;\n    if(params.rotate !== undefined && params.rotate !== null)\n      appstate.rotate = params.rotate;\n  }\n\n  //////////////\n  // Early exit if the target is not the correct type, or is null\n  if(\n    typeof appstate.target != 'object' &&\n    typeof appstate.target != 'string'\n  ) {\n    throw new TypeError('The target parameter should be a node or string');\n  }\n\n  if(\n    (typeof appstate.target == 'object' && (appstate.target === null || !appstate.target instanceof HTMLCanvasElement)) ||\n    (typeof appstate.target == 'string' && (document.getElementById(appstate.target) === null || !document.getElementById(appstate.target) instanceof HTMLCanvasElement))\n  ) {\n    throw new ReferenceError('The target element does not exist or is not a canvas element');\n  }\n\n  //////////////\n  // Properties\n  var cv = typeof appstate.target == 'object'\n    ? appstate.target\n    : document.getElementById(appstate.target);\n  var ctx = cv.getContext(\"2d\");\n  var particles = [];\n\n  //////////////\n  // Random helper (to minimize typing)\n  function rand(limit, floor) {\n    if(!limit) limit = 1;\n    var rand = Math.random() * limit;\n    return !floor ? rand : Math.floor(rand);\n  }\n\n  var totalWeight = appstate.props.reduce(function(weight, prop) {\n    return weight + (prop.weight || 1);\n  }, 0);\n  function selectProp() {\n    var rand = Math.random() * totalWeight;\n    for (var i = 0; i < appstate.props.length; ++i) {\n      var weight = appstate.props[i].weight || 1;\n      if (rand < weight) return i;\n      rand -= weight;\n    }\n  }\n\n  //////////////\n  // Confetti particle generator\n  function particleFactory() {\n    var prop = appstate.props[selectProp()];\n    var p = {\n      prop: prop.type ? prop.type : prop, //prop type\n      x: rand(appstate.width), //x-coordinate\n      y: appstate.start_from_edge ? (appstate.clock >= 0 ? -10 : parseFloat(appstate.height) + 10) : rand(appstate.height), //y-coordinate\n      src: prop.src,\n      radius: rand(4) + 1, //radius\n      size: prop.size,\n      rotate: appstate.rotate,\n      line: Math.floor(rand(65) - 30), // line angle\n      angles: [rand(10, true) + 2, rand(10, true) + 2, rand(10, true) + 2, rand(10, true) + 2], // triangle drawing angles\n      color: appstate.colors[rand(appstate.colors.length, true)], // color\n      rotation: rand(360, true) * Math.PI/180,\n      speed: rand(appstate.clock / 7) + (appstate.clock / 30)\n    };\n\n    return p;\n  }\n\n  //////////////\n  // Confetti drawing on canvas\n  function particleDraw(p) {\n    if (!p) {\n      return;\n    }\n\n    var op = (p.radius <= 3) ? 0.4 : 0.8;\n\n    ctx.fillStyle = ctx.strokeStyle = \"rgba(\" + p.color + \", \"+ op +\")\";\n    ctx.beginPath();\n\n    switch(p.prop) {\n      case 'circle':{\n        ctx.moveTo(p.x, p.y);\n        ctx.arc(p.x, p.y, p.radius * appstate.size, 0, Math.PI * 2, true);\n        ctx.fill();\n        break;\n      }\n      case 'triangle': {\n        ctx.moveTo(p.x, p.y);\n        ctx.lineTo(p.x + (p.angles[0] * appstate.size), p.y + (p.angles[1] * appstate.size));\n        ctx.lineTo(p.x + (p.angles[2] * appstate.size), p.y + (p.angles[3] * appstate.size));\n        ctx.closePath();\n        ctx.fill();\n        break;\n      }\n      case 'line':{\n        ctx.moveTo(p.x, p.y);\n        ctx.lineTo(p.x + (p.line * appstate.size), p.y + (p.radius * 5));\n        ctx.lineWidth = 2 * appstate.size;\n        ctx.stroke();\n        break;\n      }\n      case 'square': {\n        ctx.save();\n        ctx.translate(p.x+15, p.y+5);\n        ctx.rotate(p.rotation);\n        ctx.fillRect(-15 * appstate.size,-5 * appstate.size,15 * appstate.size,5 * appstate.size);\n        ctx.restore();\n        break;\n      }\n      case 'svg': {\n        ctx.save();\n        var image = new window.Image();\n        image.src = p.src;\n        var size = p.size || 15;\n        ctx.translate(p.x + size / 2, p.y + size / 2);\n        if(p.rotate)\n          ctx.rotate(p.rotation);\n        ctx.drawImage(image, -(size/2) * appstate.size, -(size/2) * appstate.size, size * appstate.size, size * appstate.size);\n        ctx.restore();\n        break;\n      }\n    }\n  }\n\n  //////////////\n  // Public itens\n  //////////////\n\n  //////////////\n  // Clean actual state\n  var _clear = function() {\n    appstate.animate = false;\n    clearInterval(appstate.interval);\n\n    requestAnimationFrame(function() {\n    \tctx.clearRect(0, 0, cv.width, cv.height);\n      var w = cv.width;\n      cv.width = 1;\n      cv.width = w;\n    });\n  };\n\n  //////////////\n  // Render confetti on canvas\n  var _render = function() {\n      cv.width = appstate.width;\n      cv.height = appstate.height;\n      particles = [];\n\n      for(var i = 0; i < appstate.max; i ++)\n        particles.push(particleFactory());\n\n      function draw(){\n        ctx.clearRect(0, 0, appstate.width, appstate.height);\n\n        for(var i in particles)\n          particleDraw(particles[i]);\n\n        update();\n\n        if(appstate.animate) requestAnimationFrame(draw);\n      }\n\n      function update() {\n\n        for (var i = 0; i < appstate.max; i++) {\n          var p = particles[i];\n\n          if (p) {\n            if(appstate.animate)\n              p.y += p.speed;\n\n            if (p.rotate)\n              p.rotation += p.speed / 35;\n\n            if ((p.speed >= 0 && p.y > appstate.height) || (p.speed < 0 && p.y < 0)) {\n              if(appstate.respawn) {\n                particles[i] = p;\n                particles[i].x = rand(appstate.width, true);\n                particles[i].y = p.speed >= 0 ? -10 : parseFloat(appstate.height);\n              } else {\n                particles[i] = undefined;\n              }\n            }\n          }\n        }\n\n        if (particles.every(function(p) { return p === undefined; })) {\n          _clear();\n        }\n      }\n\n      return requestAnimationFrame(draw);\n  };\n\n  return {\n    render: _render,\n    clear: _clear\n  }\n}\n\nexport default ConfettiGenerator;\n"],"names":["$35da740d59af89ba$var$confetti","params","appstate","target","max","size","animate","respawn","props","colors","clock","interval","rotate","start_from_edge","width","window","innerWidth","height","innerHeight","undefined","TypeError","HTMLCanvasElement","document","getElementById","ReferenceError","cv","ctx","getContext","particles","rand","limit","floor","Math","random","totalWeight","reduce","weight","prop","particleFactory","i","length","selectProp","type","x","y","parseFloat","src","radius","line","angles","color","rotation","PI","speed","particleDraw","p","op","fillStyle","strokeStyle","beginPath","moveTo","arc","fill","lineTo","closePath","lineWidth","stroke","save","translate","fillRect","restore","image","Image","drawImage","_clear","clearInterval","requestAnimationFrame","clearRect","w","render","push","draw","every","update","clear","$35da740d59af89ba$var$confettiId","querySelector","$35da740d59af89ba$var$gameIcon","querySelectorAll","$35da740d59af89ba$var$computerIcon","$35da740d59af89ba$var$rockComputer","$35da740d59af89ba$var$paperComputer","$35da740d59af89ba$var$scissorsComputer","$35da740d59af89ba$var$lizardComputer","$35da740d59af89ba$var$spockComputer","$35da740d59af89ba$var$markGamer","$35da740d59af89ba$var$markComputer","$35da740d59af89ba$var$computerChoice","$35da740d59af89ba$var$resultText","$35da740d59af89ba$var$activeIcon","arrIcon","choiceIcon","forEach","icon","classList","remove","add","$35da740d59af89ba$var$countingPoints","mark","value","Number","innerHTML","$35da740d59af89ba$var$randomChoice","choice","$35da740d59af89ba$var$caseGame","ceil","$35da740d59af89ba$var$determineWinner","gamer","computer","console","log","$35da740d59af89ba$var$comparison","myChoice","$35da740d59af89ba$var$choice","this","id","addEventListener","location","reload"],"version":3,"file":"index.45578b72.js.map"}